@using IGCV_Protokoll.Models
@using IGCV_Protokoll.util
@using Newtonsoft.Json
@model IGCV_Protokoll.ViewModels.TopicCreateVM
@{
	ViewBag.Title = "Diskussion erstellen";
	var treeHtmlId = "initialAcl";
}
<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Create", "Topics", FormMethod.Post, new { id = "topicCreateForm" }))
{
	@Html.AntiForgeryToken()

	<hr />
	<div class="row">
		<div class="col-md-8">
			<div class="form-horizontal panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">Stammdaten</h3>
				</div>
				<div class="panel-body">
					<div class="form-group">
						@Html.LabelFor(model => model.SessionTypeID, new { @class = "control-label col-md-2" })
						<div class="col-md-3">
							@Html.DropDownListFor(m => m.SessionTypeID, Model.SessionTypeList, "(bitte auswählen)", new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.SessionTypeID, "", new { @class = "text-danger" })
						</div>

						@using (Html.Delayed(null, "ACL-Baum-Belegung"))
						{
							var jsonMap = JsonConvert.SerializeObject(Model.MapSTtoAdEntities, Formatting.Indented);

							<script type="text/javascript">
								$('#SessionTypeID').change(function () {
									var id = $(this).val();
									var list = getNodeListForSessionType(id);
									var tree = $('#@treeHtmlId').jstree(true);
									tree.deselect_all();
									list.forEach(function(item) {
										tree.select_node(item);
									});
								});

								var mapSTtoAdEntities = @Html.Raw(jsonMap);
								function getNodeListForSessionType(id) {
									return mapSTtoAdEntities[id];
								}
							</script>
						}
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
						<div class="col-md-5">
							@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.ResubmissionDate, new { @class = "control-label col-md-2" })
						<div class="col-md-5">
							@Html.EditorFor(model => model.ResubmissionDate, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.ResubmissionDate, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Time, new { @class = "control-label col-md-2" })
						<div class="col-md-5">
							@Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", type = "time" } })
							@Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.OwnerID, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.DropDownListFor(m => m.OwnerID, Model.UserList, "(bitte auswählen)", new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Priority, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.EnumDropDownListFor(model => model.Priority, new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">Zugriffsrechte</h3>
				</div>
				<div class="panel-body">
					@{
						if (Model.AvailableAclPresets.Any())
						{
							<div class="text-center">
								<div class="btn-group" role="group">
									<button type="button" class="btn btn-default" id="aclPresetSelectionBtn" data-preset="@Model.AvailableAclPresets[0].EntityList">Benutzerdefiniert</button>
									<button type="button" class="btn btn-default" id="aclPresetEveryoneBtn">Jeder</button>
								</div>
							</div>
							<script type="text/javascript">
								$('#aclPresetSelectionBtn').click(function() {
									var list = $(this).attr('data-preset').split(';');
									var tree = $('#@treeHtmlId').jstree(true);
									tree.deselect_all();
									list.forEach(function(item) {
										tree.select_node(item);
									});
								});
								$('#aclPresetEveryoneBtn').click(function () {
									$('#@treeHtmlId').jstree(true).select_all();
									$('#aclTreeJson').val('[]');
								});
								$(document).ready(function () {
									$('#topicCreateForm').submit(function() {
										var data = $('#@treeHtmlId').jstree(true).get_json('#', { flat: true });
										var aclJson = JSON.stringify(data, AclPropertyFilter);
										$('#aclTreeJson').val(aclJson);
									});
								});
							</script>
						}
					}
					@Html.Action("_AclEditorForNewList", "Acl", new {htmlId = treeHtmlId})
					<input type="hidden" id="aclTreeJson" name="aclTreeJson" value="[]" />
				</div>
			</div>
		</div>
	</div>

	<div class="btn-toolbar spaced-toolbar">
		<div class="btn-group" data-toggle="buttons">
			<label class="btn btn-primary active">
				@Html.RadioButtonFor(m => m.TopicType, TopicType.Discussion, new { id = "discussionBtn" })@TopicType.Discussion.DisplayName()
			</label>
			<label class="btn btn-primary">
				@Html.RadioButtonFor(m => m.TopicType, TopicType.Report,  new { id = "reportBtn" })@TopicType.Report.DisplayName()
			</label>
		</div>
	</div>

	<div class="row">
		<div class="col-md-6 form-group">
			<div class="panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">@Html.GetDisplayName(model => model.Description)</h3>
				</div>
				<div class="panel-body">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control vresize" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="col-md-6 form-group">
			<div class="panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">@Html.GetDisplayName(model => model.Proposal)</h3>
				</div>
				<div class="panel-body">
					@Html.EditorFor(model => model.Proposal, new { htmlAttributes = new { @class = "form-control vresize" } })
					@Html.ValidationMessageFor(model => model.Proposal, "", new { @class = "text-danger" })
					<input name="@nameof(Model.Proposal)" type="hidden" value=""> @* Deaktiverte HTML-Elemente senden keine Daten mehr *@
				</div>
			</div>
		</div>
	</div>
	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>

	<div class="text-center">
		<input type="submit" value="Diskussion erstellen" class="btn btn-lg btn-primary" />
	</div>
}
<div>
	@Html.ActionLink("Verwerfen", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script type="text/javascript">
		autosize($('textarea'));

		$('#reportBtn').on('change', function () {
			if ($(this).is(':checked')) {
				$('#Proposal').rules('add', {
					required: false
				});
				$('#Proposal').each(function () {
					$(this).valid();
				});
				$('#Proposal').attr("disabled", "disabled");
			} 
		});
		$('#discussionBtn').on('change', function () {
			if ($(this).is(':checked')) {
				$('#Proposal').rules('add', {
					required: true
				});
				$('#Proposal').each(function () {
					$(this).valid();
				});
				$('#Proposal').removeAttr("disabled");
			} 
		});
	</script>
}
