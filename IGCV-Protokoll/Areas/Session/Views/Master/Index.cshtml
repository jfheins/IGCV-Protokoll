@model IEnumerable<Tuple<IGCV_Protokoll.Areas.Session.Models.ActiveSession, bool>>

@{
    ViewBag.Title = "Laufende Sitzungen";
}
@Html.ActionLink("Dashboard", "Index", "Home", new { Area = "" }, new { @class = "index-action btn btn-primary" })
<h2>@ViewBag.Title</h2>
@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <p class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @ViewBag.ErrorMessage
    </p>
}
@if (!Model.Any())
{
    <p>Aktuelle laufen keine Sitzungen.</p>
}
else
{
    <table class="table table-striped table-sortable" id="ActiveSession_table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Item1.Start)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Item1.SessionType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Item1.Manager)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Item1.PresentUsers)
                </th>
                <th>Aktionen</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Item1.Start)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Item1.SessionType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Item1.Manager.LongName)
                    </td>
					<td>
						@Html.DisplayFor(modelItem => item.Item1.PresentUsers, "IEnumerable_User")
					</td>
					<td>
						@if (item.Item2)
						{
							@Html.ActionLink("Übernehmen", "Resume", "Master", new {Area = "Session", SessionID = item.Item1.ID}, null)
						}
					</td>
                </tr>}
        </tbody>
    </table>
}
<hr />
<h3>Neue Sitzung</h3>
@using (Html.BeginForm("Create", "Master", new { Area = "Session" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="control-label col-md-2">Sitzungstyp</p>
            <div class="col-md-5">
                @Html.DropDownList("SessionTypeID", (SelectList)ViewBag.SessionTypes, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Erstellen" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<br />
<div class="well">
	Folgende Verhaltensänderungen gelten für den Sitzungsmodus:
	<ul>
		<li>Die Agenda wird anhand eines Agendatemplates definiert.</li>
		<li>Der Sitzungsleiter wird automatisch für alle Themen berechtigt.</li>
		<li>Der Sitzungsleiter darf diese Themen bearbeiten (statt dem Besitzer).</li>
		<li>Alle Sitzungsthemen werden einmalig als ungelesen markiert.</li>
		<li>Es werden nur Listenzeilen angezeigt, die alle Teilnehmer sehen dürfen.</li>
	</ul>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}