@using IGCV_Protokoll.Models
@model IEnumerable<IGCV_Protokoll.Models.DocumentContainer>

@{
	ViewBag.Title = "Papierkorb";
}

@Html.ActionLink("Papierkorb leeren", "Purge", null, new {@class = "index-action btn btn-danger"})

<h2>@ViewBag.Title</h2>

<p>Der Papierkorb enthält Dokumentencontainer, deren übergeordnetes Element (Thema oder Listeneintrag) gelöscht wurde.<br />Ein Dokumentencontainer ist hier nur dann sichtbar, wenn Sie zur Ansicht des gelöschten Elements berechtigt waren.</p>

@if (!Model.Any())
{
	<p>Der Papierkorb ist leer.</p>
}
else
{
	<table class="table table-striped table-hover table-sortable" id="RecycleBin_table">
		<thead>
			<tr>
				<th>
					ID
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Orphaned)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Title)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.FileSizeSum)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (DocumentContainer item in Model)
			{
				var elementId = $"container_{item.ID}";
				<tr id="@elementId">
					<td>
						@item.ID
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Orphaned)
					</td>
					<td>
						@Html.ActionLink(item.Title, "ContainerDetails", "Attachments", new {id = item.ID, Area = ""}, null)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.FileSizeSum)
					</td>
					<td>
						@Ajax.ActionLink("Löschen", "_PermanentDelete", "DocumentContainer",
							new {area = "", containerID = item.ID},
							new AjaxOptions {Confirm = "Container endgültig löschen?", HttpMethod = "POST", OnSuccess = $"removeContainerRow('#{elementId}');" },
							new {@class = "text-danger"})
					</td>
				</tr>
			}
		</tbody>
	</table>
}

<script type="text/javascript">
	function removeContainerRow(element) {
		if ($(element).siblings().length == 0) {
			$(element).parent().parent().replaceWith("<p>Der Papierkorb ist leer.</p>"); // Remove the whole table
		} else {
			$(element).remove();
		}
	}
</script>