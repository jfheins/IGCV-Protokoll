@using IGCV_Protokoll.Models
@model IGCV_Protokoll.Areas.Administration.ViewModels.SessionTypeVM

@{
	ViewBag.Title = "Sitzungstyp bearbeiten";
}

<h2>@ViewBag.Title</h2>

<div>
	@Html.ActionLink("Zurück zum Index", "Index")
</div>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new {@class = "text-danger"})
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
			</div>
		</div>
		
		<div class="form-group">
			@Html.LabelFor(model => model.Active, new {@class = "control-label col-md-2"})
			<div class="col-md-10">
				@Html.EditorFor(model => model.Active, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Active, "", new {@class = "text-danger"})
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgendaID, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.AgendaID, Model.AgendaList, "(Keine)", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AgendaID, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.UserDict, new {@class = "control-label col-md-2"})
			<div class="col-md-10">
				<ul class="userlist">
					@foreach (KeyValuePair<User, bool> kvp in Model.UserDict)
					{
						string preset = kvp.Value ? "checked" : null;
						<li>
							<label>
								<input checked="@preset" class="form-control check-box" name="Attendees" type="checkbox" value="@kvp.Key.ID">
								@kvp.Key.ShortName
							</label>
						</li>
					}
				</ul>
				@Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Speichern" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}