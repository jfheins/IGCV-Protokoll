@using IGCV_Protokoll.Models
@using IGCV_Protokoll.util
@model IGCV_Protokoll.Models.UserSettings

@{
	ViewBag.Title = "Einstellungen";
}

<h2>@ViewBag.Title</h2>

<p>Diese Einstellungen sind benutzerspezifisch, betreffen also nur Sie allein.</p>

@using (Html.BeginForm("Save", "Settings", FormMethod.Post, new { id = "settings_form" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@if (Enum.GetValues(typeof(ColorScheme)).Length > 1)
		{
			<div class="form-group">
				@Html.LabelFor(model => model.ColorScheme, new { @class = "control-label col-md-2" })
				<div class="col-md-2">
					@Html.EnumDropDownListFor(model => model.ColorScheme, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ColorScheme, "", new { @class = "text-danger" })
				</div>
			</div>
		}

		<div class="form-group">
			@Html.LabelFor(model => model.ReportOccasions, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EnumDropDownListFor(model => model.ReportOccasions, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ReportOccasions, "", new { @class = "text-danger" })
			</div>
			<div class="col-md-3">
				Bestimmt die Bedingungen, zu denen das Sitzungsprotokoll im Nachgang per E-Mail verschickt wird.
			</div>
		</div>

		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ReportAttachPDF, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ReportAttachPDF, new { htmlAttributes = new { @class = "form-control" } })
			</div>
			<div class="col-md-3">
				Bestimmt, ob beim Versand von Sitzungsprotokollen die volle Version als PDF angehängt wird.
			</div>
		</div>


		<!-- Listensichtbarkeit -->
		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ShowEvents, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ShowEvents, new { htmlAttributes = new { @class = "form-control" } })
			</div>
			<div class="col-md-3" style="height: 0; overflow: visible;">
				Diese Optionen dienen dem Ausblenden von Listen. In der Listenansicht werden nur noch die Listen angezeigt, die hier angehakt sind.
			</div>
		</div>

		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ShowResearchProposals, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ShowResearchProposals, new { htmlAttributes = new { @class = "form-control" } })
			</div>
		</div>

		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ShowIndustryProjects, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ShowIndustryProjects, new { htmlAttributes = new { @class = "form-control" } })
			</div>
		</div>

		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ShowOpenings, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ShowOpenings, new { htmlAttributes = new { @class = "form-control" } })
			</div>
		</div>

		<div class="form-group check-box-lg">
			@Html.LabelFor(model => model.ShowHolidays, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@Html.EditorFor(m => m.ShowHolidays, new { htmlAttributes = new { @class = "form-control" } })
			</div>
		</div>


		<!-- ACL Preset -->
		<div class="form-group">
			@Html.LabelFor(model => model.AclTreePreset, new { @class = "control-label col-md-2" })
			<div class="col-md-2">
				@{ Html.RenderPartial("~/Views/Acl/_AclEditorFor.cshtml", Model.AclTreeVM); }
				@Html.Hidden("aclPresetTree")
			</div>
			<div class="col-md-3">
				Hier kann eine benutzerdefinierte Vorbelegung für den Rechtebaum gesetzt werden. Beim Erstellen einer neuen Diskussion kann dann auf Knopfdruck diese Belegung gesetzt werden.
			</div>
		</div>

		@using (Html.Delayed(null, "Settings-ACLpreset-Editor"))
		{
			<script type="text/javascript">
				$('#settings_form').submit(function() {
					var data = $('#@Model.AclTreeVM.HtmlName').jstree(true).get_json('#', { flat: true });
					var aclJson = JSON.stringify(data, AclPropertyFilter);
					$('#aclPresetTree').val(aclJson);
				});
			</script>
		}

		<div class="form-group">
			<div class="col-md-offset-2 col-md-5">
				<input type="submit" value="Speichern" class="btn btn-primary"/>
			</div>
		</div>

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>
}

@using (Html.Delayed(null, "Tooltips"))
{
	<script type="text/javascript">
		$('[data-toggle=tooltip]').tooltip();
	</script>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}